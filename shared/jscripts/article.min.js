const app=Vue.createApp({data:()=>({tableOfContents:[]}),methods:{addToTableOfContents(id,name){this.tableOfContents.push({id:id,name:name})}}});app.component("tabledesmatieres",{data:()=>({list:""}),created(){this.$nextTick(()=>{let lis="";this.$root.tableOfContents.forEach(el=>{lis+='<li><a href="#'+el.id+'">'+el.name+"</a></li>"}),this.list=lis})},template:'\n        <div id="contents_table">\n            <div class="contents_table__table">\n                <a href="#top"><strong>Table des matières</strong></a>\n                <ul v-html="list"></ul>\n            </div>\n        </div>'}),app.component("grostitre",{props:["name","id"],created(){this.$root.addToTableOfContents(this.id,this.name)},methods:{click(event){var link=window.location.origin+window.location.pathname+"#"+this.id;navigator.clipboard.writeText(link);let target=event.currentTarget;target.classList.add("copied"),setTimeout(()=>{target.classList.remove("copied")},1e3)}},template:'\n        <div class="title">\n            <a :id="this.id"></a>\n            <h1>{{ this.name }}</h1>\n            <div class="chain" @click="click($event)"><svg viewBox="0 0 24 24"><path d="M17 7h-4v2h4c1.65 0 3 1.35 3 3s-1.35 3-3 3h-4v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5zm-6 8H7c-1.65 0-3-1.35-3-3s1.35-3 3-3h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-2zm-3-4h8v2H8z"></path></svg></div>\n            <div class="linkcopied">Lien copié &#x2713;</div>\n        </div>'}),app.component("codepen",{props:["id","title"],data:()=>({user:"ZmotriN",theme:"39618"}),template:'\n        <iframe\n            :src="\'https://codepen.io/\' + user + \'/embed/\' + id + \'?default-tab=html%2Cresult&theme-id=\' + theme"    \n            class="codepen"\n            scrolling="no"\n            frameborder="no"\n            loading="lazy"\n            allowtransparency="true"\n            allowfullscreen="true"\n        ></iframe>'}),app.component("exercice",{props:["id"],data(){let exroot="/cours/shared/exercices/"+this.id+"/",exdetails=syncjson(exroot+"details.json"),url=void 0===exdetails.url?exroot:exdetails.url;return{name:exdetails.name,description:exdetails.description,url:url}},template:'\n        <a class="exercice" target="_blank" :href="this.url">\n            <div class="exercice-container">\n                <div class="exercice-thumb" :style="\'background-image: url(\\\'/cours/shared/exercices/\' + this.id + \'/images/thumb.jpg\\\')\'"></div>\n                <div class="exercice-abstract">\n                    <em>EXERCICE</em><br>\n                    <span class="exercice-title">{{ name }}</span><br>\n                    <span class="exercice-description">{{ description }}</span>\n                </div>\n            </div>\n        </a>'}),app.component("doclink",{props:["title","href"],data(){let site="",url;switch(new URL(this.href).hostname){case"www.w3schools.com":site="w3schools";break;case"developer.mozilla.org":site="mozilla"}return{class:site}},template:'\n        <a :class="\'doclink \' + this.class" target="_blank" :href="this.href">\n            <div class="doclink-container">\n                <div class="doclink-icon"></div>\n                <span class="doclink-title">{{ title }}</span>\n            </div>\n        </a>'}),app.component("dots",{template:'\n        <div class="spacer">\n            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 256 256" fill="currentColor">\n                <rect width="256" height="128" fill="none"/>\n                <circle cx="128" cy="128" r="6"/>\n                <circle cx="64" cy="128" r="6"/>\n                <circle cx="192" cy="128" r="6"/>\n            </svg>\n        </div>'}),app.component("clip",{props:["src"],data(){let name=this.src.split(".").shift(),id=name.split("/").pop(),details=syncjson(name+".json"),track=void 0;return details.media.track.forEach(elm=>{"Video"==elm["@type"]&&(track=elm)}),null==track?{}:{id:id,name:name,width:track.Width,height:track.Height}},template:'\n        <video\n            :id="this.id"\n            :width="this.width"\n            :height="this.height"\n            :poster="this.name + \'.jpg\'"\n            data-setup=\'{"fluid": true}\'\n            class="video-js"\n            controls\n            preload="auto"\n        >\n            <source :src="this.src" type="video/mp4" />\n        </video>'}),app.mount("body");