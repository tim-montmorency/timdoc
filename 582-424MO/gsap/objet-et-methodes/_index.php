<?php 
/**
 * @type     article
 * @title    2-Objet et m√©thodes
 * @icon     images/icon.svg
 * @abstract L'objet GSAP et ses m√©thodes d'animation de base
 * @index    999
 */
?>


<grostitre>Objet GSAP</grostitre>
<p>L'objet JavaScript GSAP est le point de d√©part de toutes les fonctionnalit√©s associ√©es √† GSAP.</p>
<ul>
    <li>Cr√©ation d'animations</li>
    <li>Configuration de param√®tres</li>
    <li>Ajout de plugiciels&nbsp;<em>(plugins)</em>, d'interpolations&nbsp;<em>(eases)</em>&nbsp;ou&nbsp;d'effets</li>
    <li>Contr√¥le des animations</li>
</ul>

<dots></dots>

<grostitre>Interpolations de base</grostitre>
<p>Les interpolations, ou en anglais: <em>tweenings</em>, permettent de cr√©er des animations similaires √† celles
    r√©alis√©es en CSS.</p>
<p>Pour ce faire, il suffit de sp√©cifier:</p>
<ul>
    <li>Le ou les √©l√©ments √† animer avec un s√©lecteur, ex:&nbsp;<code>.element</code></li>
    <li>Un objet indiquant la ou les propri√©t√©s √† animer et les valeurs souhait√©es, <br>ex:
        &nbsp;<code>{ opacity: 0.5 }</code></li>
</ul>
<h3>Voir la liste des <a href="https://greensock.com/get-started/#transformShorthand" target="_blank" rel="noopener noreferrer">propri√©t√©s animables</a> sur le site de GSAP.</h3>

<p>Il est possible d'animer la majorit√© des propri√©t√©s CSS. Cependant, il est n√©cessaire de remplacer les traits
    d‚Äôunion <em>"-"</em> par une nomenclature camelCase‚Äâüê´. Par exemple, <code>font-size</code>
    deviendrait&nbsp;<code>fontSize</code>.</p>


<warning>
    <p>Bien qu‚Äôil soit possible d‚Äôanimer presque toutes les propri√©t√©s CSS, il est pr√©f√©rable de se concentrer sur
        <code>transform</code> et <code>opacity</code> lorsque possible, puisque ces propri√©t√©s b√©n√©ficies
        d‚Äôune&nbsp;acc√©l√©ration&nbsp;mat√©rielle.
    </p>
    
    <ul>
        <li><code>opacity</code></li>
        <li><code>x</code> et&nbsp;<code>y</code></li>
        <li><code>rotation</code>, <code>rotationX</code> ou&nbsp;<code>rotationY</code></li>
        <li><code>scale</code>, <code>scaleX</code> ou&nbsp;<code>scaleY</code></li>
        <li><code>skewX</code> et&nbsp;<code>skewY</code></li>
    </ul>
</warning>
<dots></dots>
<grostitre>M√©thode to()</grostitre>
<p>Dans l'exemple ci-dessous, un carr√© est positionn√© en haut √† gauche de son parent. En cliquant sur le bouton ‚ñ∂Ô∏è, une
    animation GSAP le d√©place vers la droite.</p>
<p class="codepen" data-height="340" data-theme-id="44431" data-default-tab="js,result" data-slug-hash="abaWvmo"
    data-user="tim-momo"
    style="height: 340px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
    <span>See the Pen <a href="https://codepen.io/tim-momo/pen/abaWvmo">
            GSAP - to()</a> by TIM Montmorency (<a href="https://codepen.io/tim-momo">@tim-momo</a>)
        on <a href="https://codepen.io">CodePen</a>.</span>
</p>

<warning>Les valeurs sous forme de nombre <em>(qui ne sont pas entre guillemets)</em>, ex: <code>400</code>, sont
    interpr√©t√©es comme √©tant des px. Les valeurs entre guillemets, ex <code>'400%'</code>, peuvent sp√©cifier une unit√©
    de mesure diff√©rente, comme dans le cas pr√©c√©dent o√π un pourcentage a √©t√© utilis√©&nbsp;<em>(%)</em>.</warning>

<p><strong>D√©cortiquons l'animation:</strong></p>

<ul>
    <li>
        <code>gsap</code>&nbsp;indique que nous d√©sirons utiliser une m√©thode appartenant √† la librairie&nbsp;GSAP.

    </li>
    <li>
        <code>to()</code>&nbsp;correspond √† la m√©thode&nbsp;utilis√©e. Traduisible par&nbsp;<em>"vers"</em>, cette
        m√©thode indique qu'un √©tat de fin sera pass√© et que l'√©l√©ment doit faire une interpolation
        vers&nbsp;celui-ci.
    </li>
    <li>
        <code>'.element'</code>&nbsp;le s√©lecteur correspondant √† l'√©l√©ment devant √™tre&nbsp;anim√©.
    </li>
    <li>
        <code>{ x: '400%' }</code>&nbsp;un √©tat de fin sous forme d'objet contenant une
        propri√©t√©&nbsp;<em>(x)</em>&nbsp;et une valeur&nbsp;<em>('400%')</em>.
    </li>
</ul>
<p>L'√©l√©ment se d√©place donc vers la droite‚Äâ‚û°Ô∏è de 4x sa largeur&nbsp;<em>(400%)</em>&nbsp;en l'espace d'une seconde.</p>
<br><br>
<img src="images/to_decortique_f2.png"
    alt="gasp.to('.box'), { x: 200 }) to est la m√©thode, .box est la cible(s) et x est la variable"
    style="max-width: 50%">



<warning>L‚Äôanimation ne fonctionne qu‚Äôune fois. Puisque la m√©thode <code>to()</code> indique un √©tat de fin √† atteindre
    et que l'animation a chang√© les valeurs des propri√©t√©s, leurs valeurs de d√©part est maintenant identiques √† celle de
    fin, donc aucune animation n‚Äôest ex√©cut√©e les fois&nbsp;subs√©quentes.</warning>


<doclink href='https://greensock.com/docs/v3/GSAP/gsap.to()'>to()</doclink>
<br>
<exercice href="../exercices/voiture-jaune"></exercice>




<dots></dots>

<grostitre>M√©thode from()</grostitre>


<p class="codepen" data-height="390" data-theme-id="44431" data-default-tab="js,result" data-slug-hash="MWqmaXM"
    data-user="tim-momo"
    style="height: 390px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
    <span>See the Pen <a href="https://codepen.io/tim-momo/pen/MWqmaXM">
            GSAP - to()</a> by TIM Montmorency (<a href="https://codepen.io/tim-momo">@tim-momo</a>)
        on <a href="https://codepen.io">CodePen</a>.</span>
</p>

<br>
<p><strong>D√©cortiquons une animation avec plus d'une propri√©t√©:</strong></p>
<ul>
    <li>
        <code>from()</code>&nbsp;correspond √† la m√©thode&nbsp;utilis√©e. Traduisible par&nbsp;<em>"√† partir de"</em>,
        cette m√©thode indique qu'un √©tat de d√©part sera pass√© et que l'√©l√©ment doit partir de celui-ci pour faire
        une interpolation vers ses valeurs&nbsp;initiales.
    </li>
    <li>
        <code>{ x: '400%', opacity: 0 }</code>&nbsp;un √©tat de d√©part sous forme d'objet contenant les
        propri√©t√©s&nbsp;<code>x</code>&nbsp;&amp;&nbsp;<code>opacity</code>&nbsp;et les
        valeurs&nbsp;<code>400%</code>&nbsp;&amp;&nbsp;<code>0</code>&nbsp;<em>(transparent au d√©but
            de&nbsp;l'animation)</em>.
    </li>
</ul>

<warning>La propri√©t√© CSS transform est formul√©e diff√©remment d√ª √† ses multiples valeurs possibles. Par exemple,
    <code>transform: translateX(400%)</code> est formul√© ici <code>x: '400%'</code>. Pour voir tous les noms associ√©s √†
    la propri√©t√© transform, voir la <a href="https://greensock.com/get-started/#transformShorthand" target="_blank">liste
        de&nbsp;Greensock‚Äâüü©‚Äâüß¶</a>.
</warning>

<warning>Contrairement √† l‚Äôanimation <code>to()</code>, l‚Äôanimation <code>from()</code> peut-√™tre jou√©e plus d‚Äôune
    fois, puisque l‚Äô√©tat de d√©part fourni ne correspond jamais √† celle de&nbsp;fin.</warning>

<doclink href='https://greensock.com/docs/v3/GSAP/gsap.from()'>from()</doclink>


<dots></dots>

<grostitre>M√©thode fromTo()</grostitre>

<p>Permets de sp√©cifier un √©tat de d√©part et de fin d'une animation, contrairement √†&nbsp;<a rel="noopener noreferrer"
        href="#methode-from">from()</a>&nbsp;et&nbsp;<a rel="noopener noreferrer" href="#methode-to">to()</a>&nbsp;qui
    utilisent l'√©tat
    actuel comme point de d√©part ou fin. Cette interpolation permet d'avoir un contr√¥le total sur une animation, en
    particulier lorsqu'elle est encha√Æn√©e avec d'autres&nbsp;animations.</p>

<p class="codepen" data-height="395" data-theme-id="44431" data-default-tab="js,result" data-slug-hash="YzOVqby"
    data-user="tim-momo"
    style="height: 395px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">
    <span>See the Pen <a href="https://codepen.io/tim-momo/pen/YzOVqby">
            GSAP - from()</a> by TIM Montmorency (<a href="https://codepen.io/tim-momo">@tim-momo</a>)
        on <a href="https://codepen.io">CodePen</a>.</span>
</p>
<script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script>

<br>

<p>Dans cet exemple, il est important de remarquer la pr√©sence de deux objets de
    propri√©t√©s&nbsp;<code>{ x: '0%' }</code>&nbsp;et&nbsp;<code>{ x: '400%' }</code>&nbsp;plut√¥t qu'un seul. Le premier
    sp√©cifie l'√©tat de d√©part et le deuxi√®me l'√©tat de fin de&nbsp;l'animation.</p>
<p>Il est possible d'omettre une propri√©t√© CSS dans l'√©tat de d√©part et de la sp√©cifier uniquement dans l'√©tat
    de&nbsp;fin.</p>
<p>Par exemple:&nbsp;<code>{ x: '0%' }, { x: '400%', scale: 2 }</code>&nbsp;fonctionnerait, puisque GSAP assumerait que
    le scale de d√©part correspond au&nbsp;<code>scale</code>&nbsp;naturel de l'√©l√©ment&nbsp;<em>(1)</em>&nbsp;et donc
    l'animerait jusqu'√†&nbsp;2.</p>
<p>Cependant, sp√©cifier uniquement une propri√©t√© dans l'√©tat de d√©part ne g√©n√®rera pas d'animation sur cette
    dite&nbsp;propri√©t√©.</p>
<p>Par exemple&nbsp;<code>{ x: '0%', scale: 2 }, { x: '400%' }</code>&nbsp;<code>scale</code>&nbsp;donnerait un scale
    initial de 2 et puisqu'aucun scale de fin n'est sp√©cifi√©, GSAP assumera que le scale de fin doit correspondre au
    scale de&nbsp;d√©part.</p>
    <doclink href='https://greensock.com/docs/v3/GSAP/gsap.fromTo()'>fromTo()</doclink>


<exercice href="../exercices/voiture-turquoise"></exercice>


<dots></dots>

<grostitre>M√©thode set()</grostitre>
<p><code>set()</code> initialise <em>imm√©diatement</em> les propri√©t√©s des √©l√©ments HTML cibl√©s. Il s'agit essentiellement d'une animation de type <code>to()</code> qui dure z√©ro seconde. C'est la m√™me chose mais avec un nom plus un peu plus intuitif : "set" que l'ont peut traduire par "d√©finit imm√©diatement tel param√®tre". Les lignes suivantes produisent donc des r√©sultats identiques :</p>

<highlight lang='JavaScript'>gsap.set(".class", {x: 100, y: 50, opacity: 0});
gsap.to(".class", {duration: 0, x: 100, y: 50, opacity: 0});</highlight>

<p>√Ä la place du s√©lecteur <code>".class"</code>, vous pouvez aussi utiliser un tableau (array []) contenant plusieurs s√©lecteurs afin de d√©finir les propri√©t√©s de plusieurs √©l√©ments HTML en m√™me temps. Voici un exemple :</p>

<highlight lang='JavaScript'>gsap.set([".chapeau", ".patate", ".sapin"], {x: 100, y: 50, opacity: 0});</highlight>


<doclink href='https://greensock.com/docs/v3/GSAP/gsap.set()'>M√©thode set()</doclink>



<dots></dots>


<grostitre>Et les s√©lecteurs multiples...</grostitre>
<p>√Ä titre de rappel, une s√©lecteur d√©finit un ou des √©l√©ments HTML sur le(s)quel(s) s'applique un ensemble de r√®gles.  Dans ce cas ci, on leur applique une animation.</p>
<p>Avec GSAP, la "magie" c'est qu'on n'a pas besoin de faire un querySlector ou un getDocumentById ou autre.  Simplement, ajouter en premier param√®tre de gsap() le nom de la classe de l'√©l√©ment ou le nom de l'id, ou encore le nom de la balise.</p>

<script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script>