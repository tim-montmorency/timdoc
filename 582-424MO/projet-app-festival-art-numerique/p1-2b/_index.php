 <?php

  /**
   * @type     article
   * @title    P1.2b - En √©quipe
   * @icon     images/icon.svg
   * @abstract Cr√©ation du repo git
   */
  ?>

<grostitre>Requis en √©quipe</grostitre>
<h3>Cr√©ation du repo GitHub</h3>

<checklist>
  Dans votre dossier de projet, certains sous-dossiers sont vides. Afin qu'ils puissent √™tre transf√©r√© sur github, il faut qu'ils contiennent quelque chose. Pour contrer cette situation, cr√©ez un fichier readme.md dans chaque dossier vide.
Vous devez <a target="_blank" href="https://smnarnold.com/cours/git/github" onclick="event.stopPropagation()">cr√©er un r√©pertoire GitHub</a>&nbsp;intitul√©&nbsp;<incode>[prenom1]-[prenom2]-app-festival-art</incode>.<br><br>Par exemple, si Bob et moi sommes co√©quipiers, notre r√©pertoire GitHub s'intitulera:&nbsp;<incode>bob-mariemichelle-app-festival-art</incode><br><br>Attention, celui-ci devra √™tre en mode public et non priv√© üö´. De plus, n'oubliez pas de cocher pour cr√©er fichier README.
La personne ayant cr√©√© le r√©pertoire avec son propre compte GitHub doit inviter son co√©quipier afin que celui-ci puisse y avoir acc√®s.
Vous devez ensuite cloner localement le r√©pertoire du projet et y d√©poser les fichiers cr√©√©s lors de votre devoir <a href="../p1-2a/" target="_blank" onclick="event.stopPropagation()">P1.2a</a>.
Puisque vous travaillez dans le local Mac, que le syst√®me d'exploitation MacOS cr√©e des fichiers cach√©s <em>.DS_Store</em> et que ces fichiers ne devraient pas √™tre inclus dans votre r√©pertoire git, cr√©ez un fichier nomm√© <em>.gitignore</em> dans lequel vous allez simplement inscrire:<br><incode>#ignore ALL .DS_Store files created by MacOS<br>**/.DS_Store<br>.DS_Store</incode> <br><br>Ce fichier .gitignore devra √™tre plac√© √† la racine du dossier de votre projet.
√âditez le fichier README √† la racine de votre dossier de projet. Utilisez que le langage MARKDOWN.<br> -Affichez le nom de votre choix de festival en tant de titre principal du markdown (heading niveau 1)<br> -Ajoutez ensuite le nom de ce cours suivi du nom du projet et d'un lien vers la page des instructions du projet. Exemple: <a href="https://tim-montmorency.com/timdoc/582-424MO/projet-app-festival-art-numerique/" target="_blank" onclick="event.stopPropagation()">Optimisation Web - Projet app d'un festival d'art num√©rique</a><br>- Ajoutez un sous-titre nomm√© "√âquipe", ainsi qu'une liste √† puce avec chacun des membres de l'√©quipe.
Faites un commit (bien nomm√©) et push vers GitHub.
Le 2e co√©quipier, devra √† son tour faire un clone du r√©pertoire git sur son ordinateur.
Vous √™tes maintenant pr√™ts √† faire un pull √† nouveau, chacun de votre c√¥t√© et vous assurer que vous partez tous du m√™me pied.
</checklist>

<dots></dots>

<grostitre>Remise de P1.2</grostitre>
<p>Une fois tout compl√©t√© (P1.2a, P1.2b, P1.2b App et P1.2 LP), cr√©ez une branche git nomm√©e <em>P1-2</em> et publiez cette branche sur github.</p>
<p>Apr√®s la remise, vous ne touchez plus √† cette branche. Vous devrez continuer sur la branche <em>main</em> et la branche P1-2 demeurera telle quelle afin que je puisse y faire votre √©valuation. Les prochaines remises seront toujours sur des branches distinctes.</p>