 <?php

  /**
   * @type     article
   * @title    P1.2a - √âchafaudage
   * @icon     images/icon.svg
   * @abstract √âchafaudage (scaffolding) du projet et squelette de la page HTML 
   */
  ?>



<grostitre>Squelette de la page HTML</grostitre>
<h3>Requis √† r√©aliser individuellement</h3>
<checklist>
    Chaque membre de l'√©quipe doit cr√©er sa propre page HTML nomm√© dans les 2 cas : <em>index.html</em>. Le fichier index.html de la langing page sera plac√© √† la racine du dossier du projet üìÅ alors que le fichier index.html de l'appli sera plac√© dans un sous-dossier üìÅ <em>/app</em>.
    Cr√©ez la structure de base de votre page HTML (head, body etc). 
    Dans chacune de votre page HTML, copiez-collez les balises <em>link</em> et <em>script</em> de Bootstrap disponible dans la section <a href="https://getbootstrap.com/docs/5.3/getting-started/download/#cdn-via-jsdelivr" onclick="event.stopPropagation()" target="_blank">CDN via jsDelivr</a>. Ceci permettra d'inclure les fonctionnalit√©s de Bootstrap dans votre projet via ce qui s'appel un CDN <em>(Content Delivery Network)</em>, soit des fichiers h√©berg√©s en ligne afin de permettre de les inclure rapidement et facilement dans un projet et de maximiser la cache des navigateurs. Attention, dans le fichier HTML, rappelez-vous √† quel endroit je vous conseille d'inscrire ces liens externes vers un fichier CSS et vers un fichier JavaScript.
    Assurez-vous d'avoir les balises HTML n√©cessaires au bon fonctionnement de Bootstrap, tel que pr√©sent√© dans  <a href="https://tim-montmorency.com/timdoc/582-424MO/bootstrap/introduction/" onclick="event.stopPropagation()" target="_blank">l'introduction de Bootstrap</a>.
    N‚Äôoubliez pas la balise <em>meta</em> qui vous permet d‚Äôutiliser l‚Äôencodage utf-8 afin que vos accents soient pris en compte. 
    Indentez toujours votre code correctement (HTML ET CSS). Raccourcis VS Code sur Windows : Maj+Alt+F, sur Mac : Maj+Option+F 
</checklist>


<dots></dots>
 <grostitre>√âchafaudage du projet</grostitre>



 <p>L‚Äô√©chafaudage, plus connu sous son nom anglophone <em>‚Äúscaffolding‚Äù</em>, consiste √† cr√©er une arborescence de dossiers et de fichiers qui seront utilis√©s afin de cr√©er un site web. Le terme a √©t√© emprunt√© au domaine de la construction, o√π avant m√™me de poser la premi√®re brique, un √©chafaudage est mont√© afin de simplifier la t√¢che √† accomplir.</p>

 <h3>Requis √† r√©aliser en √©quipe</h3>

<p>D'abord lisez ces pr√©cisions concernant l'√©tape #13 et l'√©tape #14.</p>

<h4>Concernant l'√©tape #13 - Les styles de headings (h1 √† h6)</h4>
<info>
  <p>R√®gle HTML et SEO: Une balise <em>&lt;h(n)&gt;</em> ne peut √™tre suivie que par une balise <em>&lt;h(n+1)&gt;</em> dans l'ordre du code source : on ne saute pas de niveau. </p>
  <p>Par exemple, apr√®s une balise <em>&lt;h1&gt;</em>, il ne peu y avoir qu'une balise <em>&lt;h2&gt;</em>, pas autre chose. <br>
  Apr√®s une balise <em>&lt;h3&gt;</em>, il ne peut y avoir qu'une <em>&lt;h4&gt;</em>. </p>
  
  <p>Mais parfois on veut visuellement donner le style de h5 √† un h3. Donc √ßa nous permet d‚Äôutiliser la bonne balise mais avec le style d‚Äôune autre, donc on aurait par exemple:</p> <span class="inline-code">&lt;h3 class=&quot;h5&quot;&gt;Titre de section&lt;/h3&gt;</span>
</info>
<info>Notez aussi, toujours selon les r√®gles SEO, qu'il ne devrait y avoir qu'un seul titre de niveau <em>&lt;h1&gt;</em> par page, c'est √† dire le titre de la dite page. Ensutie, si vous avez plusieurs sections dans la page, avec des titres de section, il conviendrait d'utiliser la balise <em>&lt;h2&gt;</em>, etc.</info>

 <br>




<h4>Concernant l'√©tape #14 - Les commentaires</h4><br>
<highlight  lang="css">/*--------------------------------------------------------- 
# Styles G√©n√©raux 
---------------------------------------------------------*/ 
header{
  ...
}
h1{
  ...
}
footer{
  ...
}

/*---------------------------------------------------------- 
# Section Hero  
----------------------------------------------------------*/ 
section.hero{
  ...
}
</highlight>

 <h3>Requis</h3>

 <checklist>
  Cr√©ez un dossier de projet commun (ce dossier sera pouss√© sur github au prochain cours).
  Ajoutez un sous-dossier nomm√© <em>app</em>.
  √Ä la racine du dossier de projet, ajoutez le fichier <em>index.html</em> qui correspond √† la <em>landing page</em>.
  Dans le sous-dossier <em>app</em>, ajoutez le fichier <em>index.html</em> qui correspond √† l'<em>appli</em>.
   Cr√©ez √† la racine du dossier de votre projet les sous-dossiers suivant üìÅ: <em>assets</em>, <em>css</em>, <em>js</em>, <em>scss</em>, <em>vendors</em>
   √Ä l'int√©rieur de votre dossier <em>css</em>, ajoutez un fichier nomm√© <em>main.css</em>. Importez cette feuille de style sur chacune des pages HTML, apr√®s celle de Bootstrap.
   √Ä l'int√©rieur de votre dossier <em>js</em>, ajoutez un fichier nomm√© <em>script.js</em>. Importez ce fichier JavaScript sur chacune des pages HTML, apr√®s celle de Bootstrap.
   √Ä l'int√©rieur de votre dossier <em>assets</em>, cr√©ez un sous-dossier <em>artists</em> et un autre nomm√© <em>artworks</em>. Ces sous-dossiers contiendront les photos des artistes et les photos des ≈ìuvres de votre site web. Toutes les autres images seront log√©es directement dans assets. C'est une bonne pratique de classer les images par cat√©gorie lorsqu'on fait un site web et qu'on a des centaines d'images √† g√©rer.
   Ouvrez votre fichier <em>main.css</em>, ce sera le fichier qui contiendra tous les styles communs au 2 pages (landing page et app).
   Cr√©ez des variables css qui repr√©sentent chacune des couleurs de votre palette.
   Liez vos fichiers de polices de caract√®re (fontes) via la balise link dans le head du fichier HTML ou via @import dans le fichier CSS.
   Cr√©ez des variables pour le nom de vos diff√©rentes fontes.
   Stylisez vos 6 niveaux de titre (headings) en utilisant le s√©lecteur de la balise et en cr√©ant aussi une classe avec le nom de la balise, par exemple : <br><span class="inline-code">h1, .h1{ font-size: 40px; font-weight: 900; color: var(--ma-couleur-primaire); }</span><br><span class="inline-code">h2, .h2{ font-size: 34px; font-weight: 700; color: var(--ma-couleur-primaire); }</span>
   Pr√©parez des groupes de commentaires CSS qui vont s√©parer les sections de vos styles. Par exemple, tous les styles g√©n√©raux vont se trouver sous le commentaire <br><span class="inline-code">/*----- Styles G√©n√©raux -----*/</span><br> et les styles de la section Hero, se retrouveront sous le commentaire <br><span class="inline-code">/*----- Section Hero -----*/</span>
   Copiez-collez le fichier <em>main.css</em> 2 fois et renommez ces nouveaux fichiers <em>styles-app.css</em> et <em>styles-lp.css</em>. Ces fichiers contiendront les styles sp√©cifiques √† chacune des pages. Allez enlever tous les styles d√©j√† √©crits dans ces deux nouvelles feuilles de style pour partir de z√©ro (vous pouvez conserver les bloc de commentaires, ils vous serviront). Importez ces feuilles de styles dans les pages HTML respectives, apr√®s <em>main.css</em>.
 </checklist>





 <br> <br> <br> <br> <br>