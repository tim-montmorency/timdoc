<?php
/**
 * @type     article
 * @title    Projet final: √âtape 1.
 * @icon     images/icon-web.jpg
 * @abstract Choix de design, pr√©paration et partage du fichier Figma, scafolding du projet, cr√©ation du r√©pertoire git.
 */
?>
<grostitre>√âtape 1</grostitre>
<p>√Ä compl√©ter et remettre dans Teams/Devoirs avant le 2 mai 23h59.</p>

<dots></dots>
<grostitre>1-Choix</grostitre>
<checklist>
  Si vous √™tes deux personnes et que chacun a cr√©√© un design diff√©rent dans le cours de design graphique, vous devez choisir l‚Äôun des deux.<br>S‚Äôil n‚Äôy a qu‚Äôun seul design disponible, utilisez simplement celui-l√†.
  Ensuite, retournez dans le <a href="https://cmontmorency365-my.sharepoint.com/:x:/g/personal/mariem_ouellet_cmontmorency_qc_ca/ETQTI_JDyl5JjuUQxMafVhQBtIO3CRK3_p6J_S6EiNuZEw?e=KrHKeP" target="_blank" rel="noopener noreferrer">document Excel</a> et, dans la colonne D, inscrivez l‚ÄôURL du site original que vous avez choisi.
  Dans la colonne E, inscrivez les noms des √©tudiants qui ont fait le design de ce site dans le cadre du cours de design graphique.
</checklist>

<dots></dots>
<grostitre>2-Pr√©paration et partage du fichier Figma</grostitre>
<alert>Tr√®s important : <span class="red-label">ne travaillez pas</span> directement sur la version que vous avez remise dans le cours de design graphique.</alert>
<checklist>
  Pour le Web2, vous devez <em>dupliquer</em> le fichier Figma correspondant √† votre design final.
  <em>Renomme</em> le fichier Figma dupliqu√© en suivant cette nomenclature: <incode>Web2_Prenom1_Prenom2_582-211</incode>.
  <em>Activez le lien de partage</em> qui permettra √† tous les membres de votre √©quipe d‚Äô√©diter le fichier. (Voir la capsule vid√©o plus bas. Utilisez le m√™me mot de passe que celui montr√© dans la vid√©o.)
  <em>Copiez le lien √©ditable</em> (comme d√©montr√© dans la capsule vid√©o) et <em>envoyez-le dans le devoir sur Teams</em>, pour que je puisse y acc√©der et avoir les <em>droits d‚Äô√©dition</em>.
</checklist>
 <a href="https://cmontmorency365-my.sharepoint.com/:v:/g/personal/mariem_ouellet_cmontmorency_qc_ca/EaEtGjyub2lNsl1smdi03M8BmlAuBF7gUfUjTV6_Ed99Wg?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&e=org79I" target="_blank" rel="noopener noreferrer">‚ñ∂Ô∏è Capsule vid√©o explicative</a> sur le partage du fichier Figma pour le projet actuel.



<dots></dots>
<grostitre>3-√âchafaudage du projet</grostitre>

<info>L‚Äô√©chafaudage, plus connu sous son nom anglophone <em>‚Äúscaffolding‚Äù</em>, consiste √† cr√©er une arborescence de dossiers et de fichiers qui seront utilis√©s afin de cr√©er un site web. Le terme a √©t√© emprunt√© au domaine de la construction, o√π avant m√™me de poser la premi√®re brique, un √©chafaudage est mont√© afin de simplifier la t√¢che √† accomplir.</info>

 <checklist>
  Cr√©ez un dossier de projet commun (ce dossier sera pouss√© sur github √† la prochaine √©tape).
  √Ä la racine du dossier de projet, ajoutez le fichier <em>index.html</em> qui correspond √† la <em>page d'accueil</em> du site.
  Dans le fichier de l'accueil <em>index.html</em>, ajoutez les balises de base d'une page HTML et n'oubliez pas d'inscrire le nom du site dans la balise <incode>title</incode> et de changer la langue pour <em>fr</em>.
  Dans le <incode>head</incode> d'<em>index.html</em>, ajoutez la balise meta suivante: <incode>meta name=&quot;robots&quot; content=&quot;noindex, nofollow&quot;</incode> en ajoutant les symbole < et > au d√©but et √† la fin de la balise. Ceci est important pour que Google ne r√©f√©rence pas votre site web puisque c'est un projet scolaire et non un v√©ritable site promotionnel.
  Copier le fichier <em>index.html</em> trois fois pour les trois autres pages, en les nommant de fa√ßon appropri√©e (sans espace, sans accent et avec l'extension de fichier .html).
  Cr√©ez √† la racine du dossier de votre projet les sous-dossiers suivant üìÅ: <em>assets</em>, <em>css</em>, <em>js</em>.
  √Ä l'int√©rieur de votre dossier <em>css</em>, ajoutez un fichier nomm√© <em>main.css</em>. 
  Liez la feuille de style <em>main.css</em> √† chacune des pages HTML.
  √Ä l'int√©rieur de votre dossier <em>assets</em>, cr√©ez ces sous-dossiers: <em>images</em>, <em>videos</em>, <em>polices</em>. Ces sous-dossiers contiendront les fichiers images, vid√©os et polices de caract√®res (si applicable) de votre site web. 
  
</checklist>

<dots></dots>
<grostitre>4-Requis Git</grostitre>
<h3>Cr√©ation du repo GitHub (√† faire en √©quipe)</h3>
<checklist>
    Avec un de vos compte GitHub, vous devez <a target="_blank" href="https://smnarnold.com/cours/git/github">cr√©er un r√©pertoire GitHub</a>&nbsp;intitul√©&nbsp;<incode>Prenom1_Prenom2_Web2final_582-211</incode>.<br><br>Par exemple, si Bob et moi sommes co√©quipiers, notre r√©pertoire GitHub s'intitulera:&nbsp;<incode>Bob_MarieMichelle_Web2final_582-211</incode><br><br>Attention, celui-ci devra √™tre en mode public et non priv√© üö´. De plus, n'oubliez pas de cocher pour cr√©er fichier README.
    La personne ayant cr√©√© le r√©pertoire avec son propre compte GitHub doit inviter son co√©quipier afin que celui-ci puisse y avoir acc√®s.
    Vous devez ensuite <em>cloner localement</em> (sur son ordinateur) le r√©pertoire du projet (clonez sur votre disque dur externe ou sur votre OneDrive et assurez-vous de toujours travailler au m√™me endroit, peu importe l'ordi sur lequel vous travaillez). Via l'explorateur de Windows, vous devez d√©poser dans ce r√©pertoire les fichiers cr√©√©s lors du requis pr√©c√©dent <a href="#3-echafaudage-du-projet" target="_blank">#3-echafaudage-du-projet</a>. On devrait voir notamment les 4 fichiers .html √† la racine du r√©pertoire (pas dans un sous-dossier).
    √âditez le fichier README √† la racine de votre dossier de projet. N'utilisez que le langage MARKDOWN.<br> - Affichez le nom de votre site web (heading niveau 1)<br>- Ajoutez un sous-titre nomm√© "Projet scolaire".<br>- Sur la ligne suivante, nom de ce cours suivi de <em>- Projet Final</em> et d'un lien vers la page des instructions du projet. <br>Exemple: <a href="https://tim-montmorency.com/timdoc/582-211/projets/refonte-siteweb/" target="_blank">Web 2 - Projet final</a><br>- Sur la ligne suivante, inscrivez le nom du coll√®ge<br>- Ajoutez un sous-titre nomm√© "√âquipe". <br>- Le sous titre "√âquipe" sera suivi d'une liste √† puce avec chacun des membres de l'√©quipe.
    Faites un <em>commit</em> (bien nomm√©), un <em>pull</em> et <em>push</em> vers GitHub.
    Le 2e co√©quipier, devra √† son tour faire un <em>clone</em> du r√©pertoire <em>giy</em> sur son ordinateur (clonez sur votre disque dur externe ou sur votre OneDrive et assurez-vous de toujours travailler au m√™me endroit, peu importe l'ordi sur lequel vous travaillez).
    Vous √™tes maintenant pr√™ts √† faire un <em>pull</em> √† nouveau, chacun de votre c√¥t√© et vous assurer que vous partez tous du m√™me pied.
</checklist>




<dots></dots>
<grostitre>5.1-Requis CSS+HTML en √©quipe</grostitre>

<warning>
  <h3>Les commentaires CSS </h3>
  <ol>
    <li>Vous devez <strong>commenter l‚Äôensemble de votre code CSS</strong> afin de d√©montrer votre compr√©hension.</li>
    <li>Ajoutez √©galement des <strong>s√©parateurs visuels</strong> (sous forme de commentaires) pour organiser vos styles en sections claires et structur√©es.</li>
  </ol>
</warning>

<p>Exemple de commentaires CSS auquel je m'attends: </p>
<highlight  lang="css">/*--------------------------------------------------------- 
# SECTION : Styles g√©n√©raux
---------------------------------------------------------*/ 
body{
  ...
}
/* Conteneur en flex permettant d'aligner le contenu sur une ligne (row) et donc l'espace restant sera divis√© entre chaque √©l√©ment enfant du .container */
.container {
  display: flex;
  justify-content: space-between;
}
/* Titre principal de la page avec une transition d'agrandissement d'√©chelle au survol */
h1 {
  font-size: 1.3rem;
  transition: transform 0.3s ease;
}
h1:hover {
  transform: scale(1.1);
}

/*---------------------------------------------------------- 
# SECTION : En-t√™te (nav, log etc)
----------------------------------------------------------*/ 
header{
  ...
}

/*---------------------------------------------------------- 
# SECTION : H√©ros
----------------------------------------------------------*/ 
section.hero{
  ...
}

/*---------------------------------------------------------------- 
# ADAPTATION PAR MEDIA QUERIES (Responsiveness) pour grands √©crans

Car ce qui pr√©c√®de les media queries est stylis√© pour mobile
en premier (mobile first).
----------------------------------------------------------------*/ 

/* Styles d'exception pour les √©crans d'une largeur de minimum 778px et plus */
@media screen and (min-width: 778px) {
  /* Adapter la taille fixe du titre principal qui √©tait de 1.3rem et le changer pour 4vw qui √©quivaut √† 4% de la largeur du viewport (de la fen√™tre) . */
  h1{
    font-size: 4vw;
  }
}
</highlight>


<thumbsup>
  N'oubliez pas de styliser <strong>mobile first</strong>. Par la suite, ajouter les styles pour plus grands √©crans via des <strong>@media queries.</strong>
</thumbsup>

<alert>N'oubliez pas de faire un <em>commit</em> et un <em>push</em> vers GitHub apr√®s chaque modification importante. Vous devez aussi faire un <em>pull</em> avant de commencer √† travailler sur votre projet, afin d'√™tre certain d'avoir la version la plus r√©cente du projet.</alert>

<h3>En √©quipe</h3>


<checklist>
  Ouvrez votre fichier <em>main.css</em>, ce sera le fichier qui contiendra tous les styles communs aux 4 pages (les styles pour l'ent√™te et le pied de page notamment).
  Cr√©ez des variables CSS qui repr√©sentent chacunes des couleurs de votre palette de couleur.
  Ajoutez vos polices de caract√®res avec la techniques appropri√©es (d√©pendemment si c'est sur une police Google Font ou un fichier √† ajouter dans vos assets avec @font-face).
  Cr√©ez des variables pour le nom de vos diff√©rentes polices de caract√®res.
  Comme mentionn√© juste avant cette liste de requis, pr√©parez des groupes de commentaires CSS qui vont s√©parer les sections de vos styles. Par exemple, tous les styles g√©n√©raux vont se trouver sous le commentaire <br><span class="inline-code">/*----- Styles G√©n√©raux -----*/</span><br> et les styles de la section Hero, se retrouveront sous le commentaire <br><span class="inline-code">/*------ Section Hero ------*/</span>
  Copiez-collez le fichier <em>main.css</em> 2 fois et renommez ces nouveaux fichiers <em>styles-initialesEtudiant1.css</em> et <em>styles-initialesEtudiant2.css</em> (changez <em>initialesEtudiant</em> pour vos initiales). Ces fichiers contiendront les styles sp√©cifiques √† chacune des pages qui vous sont attribu√© (2 chacunes). Importez ces feuilles de styles dans les pages HTML respectives, apr√®s <em>main.css</em>.
  N'oubliez pas de lier les 2 nouvelles feuilles de styles aux pages HTML appropri√©es.
  Retournez maintenant dans <em>main.css</em>, les √©tapes suivantes devront √™tre faites dans ce fichier.
  Appliquez la ou les polices de caract√®res si applicable. Ces styles seront appliqu√©s sur les 4 pages.
  Stylisez vos niveaux de titre (headings), minimalement h1, h2 et h3. Vous pouvez aussi styliser les autres niveaux de titres si vous en avez besoin. Ces styles seront appliqu√©s sur les 4 pages.
  Stylisez tout ce qui vous semble √™tre commun √† toutes les pages de votre site: les ancres (liens), les styles de boutons, les listes √† puce s'il y a lieu etc. Ces styles seront appliqu√©s sur les 4 pages.
</checklist>

<alert>N'oubliez pas de faire un <em>commit</em> et un <em>push</em> vers GitHub apr√®s chaque modification importante. Vous devez aussi faire un <em>pull</em> avant de commencer √† travailler sur votre projet, afin d'√™tre certain d'avoir la version la plus r√©cente du projet.</alert>

<grostitre>5.2-Requis HTML+CSS individuel</grostitre>

<warning>Vous √©viter des conflits git, comme vous travaillez sur les m√™me fichiers pour cette √©tape, vous pouvez consid√©rer travailler avec l'extension de VS Code nomm√©e: <a href="https://marketplace.visualstudio.com/items?itemName=MS-vsliveshare.vsliveshare" target="_blank" rel="noopener noreferrer">Live Share</a>. Voici <a href="https://docs.google.com/presentation/d/14TRk-8ykuT7yRakUvIh36GiIq9b9-9GS9Hi9Gk3JbTE/edit?usp=sharing" target="_blank" rel="noopener noreferrer">quelques diapositives</a>  qui peuvent vous √™tre utiles pour utiliser Live Share.</warning> 


<checklist>
  Vous devriez avoir fait un <em>push</em> vesr gitHub apr√®s avoir termin√© les requis pr√©c√©dents.
  Faites un choix entre vous: qui fait l'ent√™te et qui fait le pied de page?
  Chacun sur vos ordis faites un <em>pull</em> de gitHub pour r√©cup√©rer la derni√®re version du projet. 
</checklist>

<h3>Pour celui qui fait l'ent√™te</h3>
<checklist>
  Dans <em>index.html</em>, ajoutez les balises et le contenu pour l'ent√™te <incode>header</incode>. L'ent√™te contient probablement le logo, la navigation principale, etc, selon votre design.
  N'oubliez pas de regrouper certains √©l√©ments ensemble avec des <incode>div</incode> si vous avez √† placer les √©l√©ments avec flexbox les uns par rapports au autres.
  Dans le fichier css <em>main.css</em>, ajoutez les styles pour l'ent√™te afin de les rendre conformes au design de votre site.
  Lorsque vous serez satisfait du r√©sultat pour l'ent√™te, et ce en mobile et en desktop, vous pourrez dupliquer la structure de ces sections dans les autres pages HTML. Vous n'avez pas besoin de dupliquer le code CSS, car il est d√©j√† dans <em>main.css</em>.
</checklist>

<h3>Pour celui qui fait le pied de page</h3>
<checklist>
  Dans <em>index.html</em>, ajoutez les balises et le contenu pour le pied de page <incode>footer</incode>. 
  N'oubliez pas de regrouper certains √©l√©ments ensemble avec des <incode>div</incode> si vous avez √† placer les √©l√©ments avec flexbox les uns par rapports au autres.
  Dans le fichier css <em>main.css</em>, ajoutez les styles pour le pied de page afin de les rendre conformes au design de votre site.
  Lorsque vous serez satisfait du r√©sultat le pied de page, et ce en mobile et en desktop, vous pourrez dupliquer la structure de ces sections dans les autres pages HTML. Vous n'avez pas besoin de dupliquer le code CSS, car il est d√©j√† dans <em>main.css</em>.
</checklist>

<alert>N'oubliez pas de faire un <em>commit</em> et un <em>push</em> vers GitHub apr√®s chaque modification importante. Vous devez aussi faire un <em>pull</em> avant de commencer √† travailler sur votre projet, afin d'√™tre certain d'avoir la version la plus r√©cente du projet.</alert>




<dots></dots>
<grostitre>Remise: √©tape 1</grostitre>
<p>D'ici le 2 mai √† 23h59, vous devez d√©poser ceci dans Teams/Devoirs:</p>
<ul>
  <li>Le lien vers votre Figma (je dois avoir les droits d'√©ditions).</li>
  <li>Le lien vers votre r√©pertoire publique sur gitHub (tous les fichiers compl√©t√©s devront y √™tre pouss√©s).</li>
  <li>Un document Word dans lequel il est sp√©cifi√© qui fait quoi? <br>- Qui a fait l'ent√™te et qui a fait le pied de page? <br> - Qui int√©grera quelle page parmis les 4 pages √† int√©grer?</li>
</ul>

