<?php
/**
 * @type     article
 * @title    UnitÃ©s de couleur
 * @icon     images/icon.webp
 * @abstract hex, rgb, hsl, etc.
 */
?>

<p class="spacer">L'un des Ã©lÃ©ments de base d'une mise en page CSS rÃ©ussie est la sÃ©lection de couleurs. Pour notre convenance, le langage CSS met Ã  notre disposition plusieurs faÃ§ons d'exprimer les couleurs dÃ©sirÃ©es.</p>

<p>En voici quelques unes.</p>

<dots></dots>


<grostitre>Mot-clÃ©</grostitre>

<p>Il est possible de spÃ©cifier certaines couleurs en CSS en utilisant leur nom <em>(en anglais)</em> directement.</p>

<p>Par exemple, <incode>yellow</incode> pour du jauneâ€‰ğŸŸ¨, <incode>orange</incode> pour du orangeâ€‰ğŸŸ§ et ainsi de suite. Malheureusement, il est difficile de retenir la majoritÃ© de ces noms et de se limiter Ã  147 couleurs. L'usage des mots-clÃ©s est donc peu frÃ©quent Ã  l'exception de classiques tels que: <incode>black</incode>, <incode>white</incode>, etc.</p>

<tool href="tools/147-colors/"></tool>

<info>En 2014, <a target="_blank" href="https://codepen.io/trezy/post/honoring-a-great-man">une 148e couleur CSS fut Ã©tÃ© ajoutÃ©e</a> afin de rendre un hommage Ã  Eric Meyer.</info>

<dots></dots>


<grostitre>HexadÃ©cimal</grostitre>

<p>Un code hexadÃ©cimal est constituÃ© d'un diÃ¨se <incode>#</incode> suivi de 6 caractÃ¨res compris entre 0 et F. Les chiffres couvrent les valeurs de 0 Ã  9 et les lettres de 10 Ã  15 <em>(a=10, b=11 â€¦ f=15)</em>.</p>

<ul>
    <li>Les 2 premiers caractÃ¨res reprÃ©sentent le rouge</li>
    <li>Les 2 du milieu le vert</li>
    <li>Les 2 derniers le bleu</li>
</ul>

<p>Plus une valeur est Ã©levÃ©e, plus la couleur est prÃ©sente. Ã€ l'opposÃ©e, plus une valeur est basse, plus la couleur est absente.</p>

<p>Par exemple, le code suivant <incode>#ff0000</incode> indique un maximum de rougeâ€‰ğŸ’¯ğŸŸ¥ et une absence totale de vertâ€‰ğŸš«ğŸŸ© et de bleuâ€‰ğŸš«ğŸŸ¦, donnant ainsi un rouge pur.</p>

<h3>Hex 3 caractÃ¨res</h3>

<p>Lorsque chaque couleur d'un code hexadÃ©cimal est constituÃ©e de deux caractÃ¨res identiques, il est possible d'inscrire chaque caractÃ¨re de faÃ§on unique.</p>

<p>Dans l'exemple prÃ©cÃ©dent <incode>#ff0000</incode> se dÃ©construit ainsi:</p>

<ul>
    <li>Rouge = <incode>ff</incode></li>
    <li>Vert = <incode>00</incode></li>
    <li>Bleu = <incode>00</incode></li>
</ul>

<p>Puisque chaque valeur est un doublÃ©, il est possible d'abrÃ©ger le code <incode>#f00</incode>.</p>

<h3>Hex 8 caractÃ¨res</h3>

<p>Il est possible d'ajouter deux caractÃ¨res supplÃ©mentaires Ã  la fin d'un code hexadÃ©cimal rÃ©gulier afin de spÃ©cifier son alpha.</p>

<ul>
    <li><incode>00</incode> = complÃ¨tement transparent.</li>
    <li><incode>ff</incode> = complÃ¨tement opaque.</li>
    <li>Toute valeur comprise entre ces deux extrÃªmes reprÃ©sente un niveau d'alpha allant de faible Ã  fort.</li>
</ul>

<warning>Puisque calculer une valeur dâ€™alpha avec une unitÃ© constituÃ©e de chiffres et de lettres nâ€™est pas Ã©vident, cette approche nâ€™est pas particuliÃ¨rement rÃ©pandue.</warning>

<dots></dots>


<grostitre>rgb et rgba</grostitre>

<p>RGB est l'acronyme des couleurs <em>red</em>, <em>green</em> et <em>blue</em>. Pour dÃ©finir une couleur <incode>rgb()</incode> il suffit de spÃ©cifier ces 3 couleurs avec une valeur comprise entre 0 et 255. Plus la valeur est Ã©levÃ©e plus la couleur est prÃ©sente.</p>

<p>Par exemple, le rouge pur de l'exemple prÃ©cÃ©dent s'Ã©crirait ainsi <incode>rgb(255, 0, 0)</incode> dans ce format.</p>

<p>Les couleurs <incode>rgba()</incode> fonctionnent sur le mÃªme principe, mais une 4e valeur comprise entre 0 et 1 permet de spÃ©cifier l'alpha de la couleur.</p>

<p>Par exemple, pour obtenir un rouge pur semi-transparent, il est possible d'Ã©crire <incode>rgba(255, 0, 0, 0.5)</incode>.</p>

<dots></dots>


<grostitre>hsl et hsla</grostitre>

<p>HSL est l'acronyme de <incode>hue</incode>, <incode>saturation</incode> et <incode>lightness</incode> <em>(teinte, saturation et luminositÃ©)</em>. Pour dÃ©finir une couleur <incode>hsl()</incode> il faut spÃ©cifier:</p>

<ul>
    <li>
        Une teinte entre 0 et 360
        <ul>
            <li>0 = Rouge</li>
            <li>360 = Rouge</li>
        </ul>
    </li>
    <li>
        Une saturation entre 0% et 100%
        <ul>
            <li>0% = La couleur est dÃ©saturÃ©e comme sur une photo noir et blanc.</li>
            <li>100% = Couleur pure</li>
        </ul>
    </li>
    <li>
        Une luminositÃ© entre 0 et 100%
        <ul>
            <li>0% = Absence de lumiÃ¨re, tout est noir.</li>
            <li>50% = LumiÃ¨re normale.</li>
            <li>100% = LumiÃ¨re au maximum, tout est blanc./li>
        </ul>
    </li>
</ul>

<p>Par exemple, le rouge pur de l'exemple prÃ©cÃ©dent s'Ã©crirait ainsi <incode>hsl(0, 100%, 50%)</incode> dans ce format.</p>

<p>Les couleurs <incode>hsla()</incode> fonctionnent sur le mÃªme principe, mais une 4e valeur comprise entre 0 et 1 permet de spÃ©cifier l'alpha de la couleur.</p>

<p>Par exemple, pour obtenir un rouge pur semi-transparent, il est possible d'Ã©crire <incode>hsla(0, 100%, 50%, 0.5)</incode>.</p>

<tool href="tools/convert-a-color/"></tool>

<knowmore href="https://developer.mozilla.org/fr/docs/Web/CSS/color_value">Article MDN Ã  propos des unitÃ©s de couleurs</knowmore>

<dots></dots>



