<?php

/**
 * @type     article
 * @title    Flexbox interm√©diaire
 * @icon     images/icon.webp
 * @abstract figma dev mode et flexbox, flex-grow, flex-shrink, flex-basis, order
 */

?>



<grostitre>flex-grow</grostitre>

<p>Propri√©t√© pouvant √™tre appliqu√©e √† un enfant dont le parent est en <incode>display: flex;</incode>.</p>

<p>Cette propri√©t√© accepte une valeur sans unit√© <em>(bref, un chiffre)</em> indiquant √† l'√©l√©ment qu'il peut grandir, quitte √† d√©passer son <incode>width</incode>, afin de remplir l'espace vacant dans son parent.</p>

<p>Par d√©faut, cette valeur est √† <incode>0</incode>.</p>

<h3>Sans flex-grow vs flex-grow</h3>

<codepen id="rNbxJxG" tab="result"></codepen>

<span class="remark">
    <br>√Ä gauche, tous les √©l√©ments ont un width de base sans flex-grow.<br>
    √Ä droite, l‚Äô√©l√©ment #2 a la propri√©t√© flex-grow: 1; en plus lui permettant de s‚Äôagrandir.<br>

</span><br>

<h3>Multiple flex-grow</h3>

<p>Lorsque plusieurs √©l√©ments ont la propri√©t√© <incode>flex-grow</incode>, ils se partagent l'espace restant en fonction de la valeur qui leur est attribu√©e de fa√ßon proportionnelle.</p>

<p>Par exemple, s'ils ont tous la m√™me valeur, ils grandiront tous de fa√ßon √©gale, tandis que si un √©l√©ment √† une valeur trois fois plus grande, il prendra trois fois plus d'espace que les autres.</p>

<codepen id="yLrevJb" tab="result"></codepen>

<span class="remark">
    <br>√Ä gauche, tous les √©l√©ments ont un flex-grow identique,<incode> flex-grow: 1;</incode><br>
    √Ä droite, l‚Äô√©l√©ment #3 a un <incode>flex-grow: 3;</incode> lui permettant de prendre 3x plus d‚Äôespace restant.<br>
</span><br>

<warning>Les unit√©s n√©gatives, ne sont pas permises.</warning><br>

<doclink href="https://developer.mozilla.org/fr/docs/Web/CSS/flex-grow">flex-grow</doclink>
<doclink href="https://www.w3schools.com/cssref/css3_pr_flex-grow.php">flex-grow</doclink>

<exercice href="exercices/flexbox-zombie-chapitre-5/"></exercice>

<exercice href="../exercices/flexbox-poesie-hiver/"></exercice>

<dots></dots>

<grostitre>flex-shrink</grostitre>

<p>Propri√©t√© pouvant √™tre appliqu√©e √† un enfant dont le parent est en <incode>display: flex;</incode>.</p>

<p>Cette propri√©t√© accepte une valeur sans unit√© <em>(bref, un chiffre)</em> indiquant la proportion avec laquelle l'√©l√©ment devrait r√©tr√©cir en cas de besoin <em>(si l'espace est insuffisant dans le parent). Bref, elle agit √† l'inverse de flex-grow;</em></p>

<p>Par d√©faut, cette valeur est √† <incode>1</incode>.</p>

<h3>Avec flex-shrink vs sans flex-shrink</h3>

<p>Si tous les √©l√©ments ont la propri√©t√© <incode>width: 50%;</incode>, l'espace est th√©oriquement insuffisant afin que tous les √©l√©ments affichent sur une-m√™me ligne. Cependant, lorsque des √©l√©ments sont enfants d'un parent en <incode>display: flex;</incode> celui-ci les forces √† se compresser afin de rentrer sur une m√™me ligne.</p>

<codepen id="poBgaPP" tab="result"></codepen>

<span class="remark">
    <br>√Ä gauche, tous les √©l√©ments ont un <incoode>flex-shrink: 1;</incoode>, donc r√©tr√©cissent de fa√ßon uniforme.</incode><br>
    √Ä droite, l‚Äô√©l√©ment #2 a la propri√©t√© <incode>flex-shrink: 0;</incode> donc refuse de r√©tr√©cire et garde son <incode>width: 50%;</incode>.<br>
</span><br>

<warning>Les unit√©s n√©gatives, ne sont pas permises.</warning><br>

<doclink href="https://developer.mozilla.org/fr/docs/Web/CSS/flex-shrink">flex-shrink</doclink>
<doclink href="https://www.w3schools.com/cssref/css3_pr_flex-shrink.php">flex-shrink</doclink>
<br><br>
<exercice href="exercices/flexbox-zombie-chapitre-6/"></exercice>

<dots></dots>

<grostitre>flex-basis</grostitre>

<p>Propri√©t√© pouvant √™tre appliqu√©e √† un enfant dont le parent est en <incode>display: flex;</incode>.</p>

<p>Cette propri√©t√© accepte n'importe quelle <a href="../unites-de-mesure/">unit√© de mesure</a> CSS afin d'indiquer la dimension id√©ale d'un √©l√©ment. La dimension attribu√©e constitue un point de d√©part avant qu'un <incode>flex-grow </incode>ou un <incode>flex-shrink</incode> n'intervienne. Dans le contexte d'un parent en <incode>flex-direction: row;</incode>, c'est en quelque sorte l'√©quivalent de la propri√©t√© <incode>width</incode>, tandis qu'en <incode>flex-direction: column;</incode> c'est l'√©quivalent du <incode>height</incode>.</p>

<warning>La propri√©t√© <incode>flex-basis </incode>respecte les limites configur√©es via les propri√©t√©s <incode>min-width</incode>, <incode>max-width</incode>, <incode>min-height</incode> et <incode>max-height</incode>.</warning>

<p>Par d√©faut, cette valeur est √†<incode> auto</incode>.</p>

<codepen id="JjVGppw" tab="css,result"></codepen>

<warning>Les unit√©s n√©gatives, ne sont pas permises.</warning><br>

<doclink href="https://developer.mozilla.org/fr/docs/Web/CSS/flex-basis">flex-basis</doclink>
<doclink href="https://www.w3schools.com/cssref/css3_pr_flex-basis.php">flex-basis</doclink>
<br><br>
<exercice href="exercices/flexbox-zombie-chapitre-7/"></exercice>

<dots></dots>

<grostitre>order</grostitre>

<p>D√©finis la priorit√© d'affichage d'un enfant dans un parent ayant la propri√©t√© <incode>display: flex;</incode>.</p>

<p>Par d√©faut, cette valeur est √† <incode>0</incode>.</p>

<p>Par d√©faut tous les √©l√©ments ont la m√™me valeur d'ordre, ils s'affichent donc en fonction de leur ordre d'apparition dans le code, puisqu'aucun √©l√©ment n'est jug√© plus prioritaire qu'un autre. Cependant, si un √©l√©ment √† un ordre inf√©rieur √† 0 üîΩ, il se positionnera avant tous ceux ayant la valeur par d√©faut de 0. √Ä l'inverse, si un √©l√©ment √† un ordre est sup√©rieur √† 0 üîº, il se positionnera apr√®s tous ceux ayant la valeur par d√©faut de 0.</p>

<codepen id="LYvGQBv" tab="result"></codepen>

<span class="remark">
    <br>√Ä gauche, l‚Äô√©l√©ment #2 √† la propri√©t√© <incode>order: -1;</incode> lui donnant un ordre plus petit que les autres √©l√©ments.<br>
    √Ä droite, l‚Äô√©l√©ment #2 √† la propri√©t√© <incode>order: 1;</incode> lui donnant un ordre plus grand que les autres √©l√©ments.<br>
</span><br>

<warning>La propri√©t√© <incode>order</incode> n‚Äôaffecte aucunement les pseudo-classes telles que<incode> :nth-child()</incode>.</warning>

<doclink href="https://developer.mozilla.org/fr/docs/Web/CSS/order">order</doclink>
<doclink href="https://www.w3schools.com/cssref/css3_pr_order.php">order</doclink>
<br><br>
<exercice href="exercices/flexbox-zombie-chapitre-8/"></exercice>

<dots></dots>

<exercice href="../exercices/flexbox-pony/"></exercice>
<exercice href="../exercices/flexbox-actualite-google/"></exercice>

<dots></dots> 
<exercice href="exercices/flexbox-froggy-niveaux-14-a-17/"></exercice>
<exercice href="exercices/flexbox-defense-niveaux-10-a-12/"></exercice>