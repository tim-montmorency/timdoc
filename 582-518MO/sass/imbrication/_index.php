<?php 
/**
 * @type     article
 * @title    Imbrication
 * @icon     ../images/icon.webp
 * @abstract Acc√©l√©rer l'√©criture de feuilles de styles
 * @index    45
 * @ref      web/sass
 */
?>

<p>Par d√©faut le langage CSS ne permet pas de faire d'imbrications, commun√©ment appel√© <em>"nesting"</em> en anglais. Il
    est donc parfois n√©cessaire de r√©p√©ter un s√©lecteur plusieurs fois dans son code CSS.</p>
<p>Heureusement, Sass apporte cette fonctionnalit√© √† CSS, ce qui permet d'acc√©l√©rer l'√©criture de feuilles de styles et
    de simplifier leur lecture.</p>



<dots></dots>
<grostitre>Imbrications de base</grostitre>


<p>Afin d'√©viter de r√©p√©ter le s√©lecteur <incode>.list</incode> √† plusieurs reprises, il est possible d'√©crire en SCSS:</p>

<highlight lang="scss">.list {
  position: relative;
  
  .item { display: inline-block; }
  
  .link { color: blue; }
}</highlight>

<p>Ce qui g√©n√©rera le code CSS suivant ‚è¨</p>

<highlight lang="css">.list { position: relative; }

.list .item { display: inline-block; } 

.list .link { color: blue; }</highlight>


<h3 class="heading heading--h3" id="Niveaux d'imbrications">Niveaux d'imbrications</h3>

<p>Vous pouvez imbriquer des √©l√©ments ainsi √† l'infini. Dans l'exemple pr√©c√©dent, nous avions un seul niveau d'imbrication.</p>



<p>Voici maintenant un exemple contenant deux niveaux d'imbrications:</p>
<highlight lang="scss">.list {
  position: relative;
  
  .item { 
    display: inline-block; 
    
    .link { color: blue; }
  }
}</highlight>
<p>Ce qui g√©n√©rera le code CSS suivant ‚è¨</p>
<highlight lang="css">.list { position: relative; }

.list .item { display: inline-block; } 

.list .item .link { color: blue; } // üëà ici</highlight>




<dots></dots>
<p>Voici un autre exemple d'utilisation.</p><!-- Remarquez les ancres du menu de navigation ne seront pas stylis√© de la m√™me fa√ßon que ceux du reste de la page.</p>
<p>De plus, les √©l√©ments de liste du menu et ceux du sous-menu sont un peu diff√©rents l'un de l'autre.</p>-->

<codepen id="qBLZwem" tab="css,result" height="850"></codepen>

<p>Dans l'exemple pr√©c√©dent, lorsqu'on compile le SCSS en CSS, √ßa donnera le code suivant:</p>

<highlight lang="css">a {
  color: purple;
  text-decoration: none;
}
a:hover {
  text-decoration: underline;
}
header nav ul {
  list-style: none;
  margin: 0;
  padding: 5px;
  background: #665566;
  font-size: 18px;
}
header nav ul li {
  display: inline-block;
  padding: 0 10px;
  position: relative;
}
header nav ul li .link {
  color: coral;
  text-transform: uppercase;
  font-weight: 100;
}
header nav ul li .link--active {
  text-decoration: underline;
  color: white;
}
header nav ul li ul {
  position: absolute;
  z-index: 100;
  background-color: white;
  width: auto;
  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.3);
  font-size: 14px;
}
header nav ul li ul li {
  padding: 5px 0;
}
header nav ul li ul li .link {
  color: #665566;
}</highlight>
<warning>√âvitez d‚Äôabusez des imbrications. Plus de trois niveaux d‚Äôimbrication est g√©n√©ralement consid√©r√© comme √©tant une mauvaise pratique et rendra votre code difficile √†&nbsp;d√©boguer.</warning>

<doclink href="https://sass-lang.com/documentation/style-rules/declarations#nesting">Nesting (imbrication)</doclink>




<dots></dots>
<grostitre>S√©lecteurs avanc√©s</grostitre>

<p>Les imbrications sont compatibles avec tous les <a target="_blank" rel="noopener noreferrer"
        href="../../../582-215MO/css/selecteurs-avances/">s√©lecteurs CSS avanc√©s</a>.</p>
<p>Par exemple:</p>

<highlight lang="scss">.list {
  > .item { display: inline-block; }
  
  + .logo { display: none; }
}</highlight>

<p>G√©n√©rera le code CSS suivant ‚è¨</p>
<highlight lang="css">.list > .item { display: inline-block; }

.list + .logo { display: none; } </highlight>

<doclink href="https://sass-lang.com/documentation/style-rules#selector-combinators">selector combinator</doclink>







<dots></dots>
<grostitre>S√©lecteur de parent</grostitre>


<p>Le s√©lecteur de parent <incode>&amp;</incode> est un s√©lecteur sp√©cial invent√© par Sass permettant de faire r√©f√©rence au s√©lecteur parent courant.</p>

<p>Avant de d√©montrer le s√©lecteur parent, rappelez vous que tout s√©lecteur imbriqu√© dans un autre se fait convertir par d√©faut en enfant du premier. </p>

<p>Autrement dit:</p>

<highlight lang="scss">.selecteur1 {
  .selecteur2 { ... }
}</highlight>

<p>G√©n√©rera le code CSS suivant ‚è¨</p>

<highlight lang="css"> .selecteur1 .selecteur2 { ... } </highlight>

<p>Remarquez <strong>l'espace entre les deux s√©lecteurs</strong> indiquant que <incode>.selecteur2</incode> est enfant de <incode>.s√©lecteur1</incode>.  Il sera donc appliqu√© √† des balises imbriqu√©es comme dans le code suivant:</p>

<highlight lang='html'><div class="selecteur1">
  <div class="selecteur2">...</div> 
</div></highlight>


<dots></dots>

<p>Revenons au s√©lecteur parent, gr√¢ce √† celui-ci <incode>&amp;</incode>, il est possible de contourner ce comportement.</p>

<p>Si on ajoute un <incode>&amp;</incode> devant le .selecteur2</p>

<highlight lang="scss">.selecteur1 {
  &amp;.selecteur2 { ... }
}</highlight>

<p>G√©n√©rera le code CSS suivant ‚è¨</p>

<highlight lang="css"> .selecteur1.selecteur2 { ... } </highlight>

<p>Remarquez maintenant l'espace inexistant entre .selecteur1 .selecteur2, cela signifie que le s√©lecteur 2 s'est appliqu√© au parent dans l'impbrication Sass. Ce qui en r√©sulte d'un s√©lecteur css qui vise un √©l√©ment qui contient les 2 classes comme dans l'exemple html ci-dessous.</p>

<highlight lang='html'>&lt;div class=&quot;selecteur1 selecteur2&quot;&gt; ... &lt;/div&gt;</highlight>




<dots></dots>
<h3 class="heading heading--h3" id="Pseudo-classes">Pseudo-classes</h3>

<p>Les imbrications Sass sont compatibles avec les <a target="_blank" rel="noopener noreferrer" href="../../../582-215MO/css/pseudo-classes/">pseudo-classes</a> lorsqu'un s√©lecteur parent est utilis√©.</p>

<p>Par exemple:</p>

<highlight lang="scss">.btn {
  background: blue;
  
  &:hover { background: lightblue; }
}</highlight>

<p>G√©n√©rera le code CSS suivant ‚è¨</p>

<highlight lang="css">.btn { background: blue; }

.btn:hover { background: lightblue; }</highlight>
<dots></dots>
<p>Autre exemple de pseudo-classe:</p>

<highlight lang="scss">.section {
  background: white;
  
  &:nth-child(3) { background: gray; }
}</highlight>

<p>G√©n√©rera le code CSS suivant ‚è¨</p>

<highlight lang="css">.section { background: white; }

.section:nth-child(3) { background: gray; }</highlight>




<p>Remarquez l'utilisation du s√©lecteur parent <incode>&amp;</incode>. Celui-ci permet de faire une r√©f√©rence au s√©lecteur
    courant, en l'occurence <incode>.btn</incode><em> </em>et de lui rabouter directement, <strong>sans espace</strong>, la
    pseudo-classe <incode>:hover</incode>.</p>




<dots></dots>
<h3 class="heading heading--h3" id="Pseudo-√©l√©ments">Pseudo-√©l√©ments</h3>

<p>Les imbrications Sass sont compatibles avec les <a target="_blank" rel="noopener noreferrer"
        href="../../../582-215MO/css/pseudo-elements/">pseudo-√©l√©ments</a> lorsqu'un s√©lecteur parent est utilis√©.</p>

<p>Par exemple:</p>

<highlight lang="scss">.btn {
  background: blue;
  
  &::before { content: "üîò"; }
}</highlight>

<p>G√©n√©rera le code CSS suivant ‚è¨</p>

<highlight lang="css">.btn { background: blue; }

.btn::before { content: "üîò"; }</highlight>

<h3 class="heading heading--h3" id="Renvers√©">Renvers√©</h3>

<p>Parfois, il souhaitable de sp√©cifier que notre √©l√©ment devrait avoir une apparence diff√©rente dans un certain
    contexte.</p>
<p>Par exemple, lorsqu'un bouton est affich√© dans un menu, sa couleur de fond pourrait devoir √™tre grise plut√¥t que
    bleue. Le s√©lecteur parent permet de couvrir ce cas de figure sans avoir √† quitter le contexte du s√©lecteur du
    bouton en utilisant ce s√©lecteur comme suffix.</p>


<highlight lang="scss">.btn {
  .menu & { background: grey; }
}</highlight>

<p>G√©n√©rera le code CSS suivant ‚è¨</p>

<highlight lang="css">.menu .btn { background: grey; }</highlight>

<doclink href="https://sass-lang.com/documentation/style-rules/parent-selector">Parent selector</doclink>

<dots></dots>


<!--<tool href="../../tools/sassmeister/"></tool>-->
<tool href="../../tools/sass-playground/"></tool>
<tool href="../../tools/csstoscss/"></tool>
