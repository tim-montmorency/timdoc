<?php 
/**
 * @type     article
 * @title    Promesses JS interm√©diaire
 * @icon     images/ico-promesse-js.png
 * @abstract promise.all(), promise.any()...
 * @index    98
 * @ref      web/javascript
 */
?>

<grostitre>RECEVOIR UNE PROMESSE (suite)</grostitre>



<p>La relation entre des promesses peut varier. Parfois certaines sont interchangeables, alors qu'√† d'autres moments elles sont toutes requises avant de pouvoir passer √† l'√©tape&nbsp;suivante.</p>

<p>Afin de g√©rer ces relations, l'objet&nbsp;<incode>Promise</incode>&nbsp;est dot√© de plusieurs m√©thodes permettant de retourner √† son tour des promesses&nbsp;<em>(promise)</em>. Voici deux de ces m√©thodes les plus&nbsp;communes.</p>


<grostitre>- all()</grostitre>

<p>La m√©thode&nbsp;<incode>Promise.all()</incode>&nbsp;retourne une promesse respect√©e lorsque l'ensemble des promesses lui √©tant pass√©es en param√®tres sont respect√©es. Sa valeur de r√©sultat contient un tableau popul√© par le r√©sultat de chacune de ses&nbsp;sous-promesses.</p>

<highlight lang="javascript">
const p1 = new Promise(resolve => resolve("Promesse 1"));
const p2 = new Promise(resolve => resolve("Promesse 2"));
const p3 = new Promise(resolve => resolve("Promesse 3"));

Promise.all([p1, p2, p3]).then(values => {
  console.log(values);
});

// ["Promesse 1", "Promesse 2", "Promesse 3"]
</highlight>




<doclink href="https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise/all">all()</doclink>

<dots></dots>

<grostitre>- any()</grostitre>
<p>Contrairement √† la m√©thode&nbsp;<a rel="noopener noreferrer" href="#all">Promise.all()</a>, la m√©thode&nbsp;<incode>Promise.any()</incode>&nbsp;retourne une promesse respect√©e d√®s qu'une promesse lui √©tant pass√©es en param√®tres est respect√©e. Sa valeur de r√©sultat contient le r√©sultat de la sous-promesses la plus rapide √†&nbsp;r√©pondre.</p>

<highlight lang="javascript">
const p1 = new Promise((resolve) => resolve("Promesse 1")); // üê¢ lente
const p2 = new Promise((resolve) => resolve("Promesse 2")); // üêá rapide
const p3 = new Promise((resolve) => resolve("Promesse 3")); // üêï moyenne

Promise.any([p1, p2, p3]).then((valeur) => {
  console.log(valeur); // "Promesse 2"
});
</highlight>

<doclink href="https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Global_Objects/Promise/any">any()</doclink>


