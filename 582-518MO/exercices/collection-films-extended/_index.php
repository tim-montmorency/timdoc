<?php
/**
 * @type     exercice
 * @title    Collection de films 
 * @icon     images/thumb.jpg
 * @abstract Vous devez cr√©er une app vue qui vous permettra de cr√©er et g√©rer une collections de films.
 */
?>

<p>Vous devez cr√©er une app vue qui vous permettra de cr√©er et g√©rer une collections de films.</p>


<p>Aper√ßu du r√©sultat‚ÄØüëá</p>
<small>Pour contr√¥ler la vid√©o, clic-droit et "Afficher toute les commandes".</small>
<clipasset src='images/demo-exa316.mp4'></clipasset>

<dots></dots>

<grostitre>Mat√©riel</grostitre>
<a href="images/dossier-depart_exa316.zip" target="_blank" rel="noopener noreferrer" download="" class="starting-files">Dossier de d√©part‚ÄØüìÅ</a>



<dots></dots>
<warning>
    <p>Vous devez commenter chaque √©tape. </p>
    Si c'est en JavaScript, pour l'√©tape A, instruction 1:
    <highlight lang='javascript'>/* √âtape A - 1 */</highlight>
    Si c'est en HTML, pour l'√©tape A, instruction 1:
    <highlight lang='html'>&lt;!-- √âtape A - 1 --&gt;</highlight>
</warning>

<grostitre>Requis Vue.js - √âtape A</grostitre>
<info>Vous devez compl√©ter cette √©tape avant de vous lancer dans les √©tapes suivantes (B et C).</info>
<checklist>
Dans le fichier <em>index.html</em>, veuillez inscrire votre nom complet dans la balise <span class='inline-code'>title</span>.
Cr√©ez une app Vue.js. N‚Äôoubliez pas d‚Äôinclure le cadriciel via CDN.
Dans les donn√©es de votre application Vue, ajoutez une propri√©t√© appel√©e <span class='inline-code'>moviesArr</span>. Cette propri√©t√© doit contenir le tableau pr√©sent√© ci-dessous (sous les consignes).
Affichez la liste des films √† l'endroit indiqu√© dans le fichier <em>index.html</em>: <br>- Utilisez Vue.js pour g√©n√©rer dynamiquement une liste √† puces <span class='inline-code'>ul li</span>.<br>- Chaque √©l√©ment de la liste doit afficher les films du tableau <span class='inline-code'>moviesArr</span> dans le format suivant : <em>Titre&nbsp;(ann√©e)</em>
</checklist>

<hr>

<p>Voici le tableau √† copier dans votre app :</p>
<highlight lang='javascript'>[
    {
        title: "Dune: Part Two",
        viewed: true,
        year: 2024,
        countryFlagImg: "https://flagsworld.org/img/cflags/USA-flag.png",
        favorite: false,
    },
    {
        title: "The Substance",
        viewed: true,
        year: 2024,
        countryFlagImg: "https://flagsworld.org/img/cflags/USA-flag.png",
        favorite: false,
    },
    {
        title: "Don't Look Up",
        viewed: false,
        year: 2021,
        countryFlagImg: "https://flagsworld.org/img/cflags/USA-flag.png",
        favorite: true,
    },
    {
        title: "Le plongeur",
        viewed: false,
        year: 2023,
        countryFlagImg: "https://assets.codepen.io/9367036/qc.svg",
        favorite: false,
    },
    {
        title: "Simple comme Sylvain",
        viewed: false,
        year: null,
        countryFlagImg: "https://assets.codepen.io/9367036/qc.svg",
        favorite: false,
    },
    {
        title: "Le successeur",
        viewed: false,
        year: 2023,
        countryFlagImg: "https://assets.codepen.io/9367036/qc.svg",
        favorite: true,
    },
    {
        title: "Leave the World Behind",
        viewed: false,
        year: 2023,
        countryFlagImg: "https://flagsworld.org/img/cflags/USA-flag.png",
        favorite: true,
    },
    {
        title: "Ligne de fuite",
        viewed: false,
        year: null,
        countryFlagImg: "https://assets.codepen.io/9367036/qc.svg",
        favorite: false,
    },
    {
        title: "Parasite",
        viewed: true,
        year: 2019,
        countryFlagImg:
        "https://flagsworld.org/img/cflags/south-korea-flag.png",
        favorite: false,
    },
    {
        title: "Everything, Everywhere All at Once",
        viewed: true,
        year: 2023,
        countryFlagImg: "https://flagsworld.org/img/cflags/USA-flag.png",
        favorite: true,
    },
]
</highlight>



<dots></dots>
<warning>
    <p>Vous devez commenter chaque √©tape. </p>
    Si c'est en JavaScript, pour l'√©tape B, instruction 1:
    <highlight lang='javascript'>/* √âtape B - 1 */</highlight>
    Si c'est en HTML, pour l'√©tape B, instruction 1:
    <highlight lang='html'>&lt;!-- √âtape B - 1 --&gt;</highlight>
</warning>

<grostitre>Requis Vue.js - √âtape B</grostitre>
<info>Si vous avez des difficult√©s avec cette √©tape, vous pouvez passer directement √† l‚Äô√âtape C, car celle-ci n‚Äôest pas essentielle pour la suite.</info>
<checklist>
Ajoutez quatre propri√©t√©s dans les donn√©es (data) de votre application Vue.js. Ces propri√©t√©s seront li√©es aux champs du formulaire. 
Donnez-leur des noms explicites qui refl√®tent leur r√¥le&nbsp;: <br>-&nbsp;Une donn√©e pour le titre du film. <br>-&nbsp;Une donn√©e pour l‚Äôann√©e de sortie du film. <br>-&nbsp;Une donn√©e pour indiquer si le film est parmi les pr√©f√©r√©s de l‚Äôutilisateur. <br>-&nbsp;Une donn√©e pour le pays d‚Äôorigine du film.
Liez ces 4 donn√©es aux champs de formulaire correspondants.
Cr√©ez une m√©thode <span class='inline-code'>saveMovies</span>. 
Cette m√©thode sera appel√©e au clic du bouton <em>Ajouter √† la liste</em>.
Cette m√©thode doit ajouter au tableau <span class='inline-code'>moviesArr</span> le nouveau film en se basant sur les 4 infos entr√©es via le formulaire. 
Apr√®s avoir ajout√© le nouveau film, r√©initialisez la valeur des 4 donn√©es li√©es au formulaire. Par exemple, si c'est une donn√©e qui contient une chaines de caract√®res, vous pouvez lui donner la valeur d'une chaine vide "".
</checklist>





<dots></dots>
<warning>
    <p>Vous devez commenter chaque √©tape. </p>
    Si c'est en JavaScript, pour l'√©tape C, instruction 1:
    <highlight lang='javascript'>/* √âtape C - 1 */</highlight>
    Si c'est en HTML, pour l'√©tape C, instruction 1:
    <highlight lang='html'>&lt;!-- √âtape C - 1 --&gt;</highlight>
</warning>
<grostitre>Requis Vue.js - √âtape C</grostitre>
<checklist> 
Ajoutez la classe CSS statique <span class='inline-code'>.flag</span> √† chaque film.
Ajoutez la classe CSS dynamique <span class='inline-code'>.favorite</span> aux films marqu√©s comme favoris (bas√© sur la valeur de la propri√©t√© <span class='inline-code'>isFavorite</span>).
Ajoutez la classe CSS dynamique <span class='inline-code'>.viewed</span>  aux films d√©j√† vus (bas√© sur la valeur de la propri√©t√© <span class='inline-code'>viewed</span>).
Ajoutez un attribut dynamique <span class='inline-code'>style</span> sur les films afin d‚Äôy ajouter une image d‚Äôarri√®re-plan dont l‚Äôurl correspondra √† la propri√©t√© <span class='inline-code'>countryFlagImg</span> du film.
Si un film n‚Äôa pas d‚Äôann√©e de sortie (bas√© sur la valeur de la propri√©t√© <span class='inline-code'>year</span>), les parenth√®ses √† c√¥t√© du titre ne doivent pas appara√Ætre.                                                                              
Permettez √† l‚Äôutilisateur de cliquer sur un film pour lui ajouter ou lui retirer la classe <span class='inline-code'>.viewed</span>. Donc s'il clique et que le film n‚Äôa pas encore √©t√© marqu√© comme vu, ajoutez la classe. Si elle est d√©j√† pr√©sente, retirez-la.
Cr√©ez une propri√©t√© calcul√©e appel√©e <span class='inline-code'>allMoviesViewed</span>. Cette propri√©t√© doit retourner <span class='inline-code'>true</span> si tous les films de la liste ont √©t√© marqu√©s comme vus.
Le paragraphe avec l‚Äôidentifiant <span class='inline-code'>#tout-vus</span> doit s‚Äôafficher uniquement si la propri√©t√© calcul√©e <span class='inline-code'>allMoviesViewed</span> retourne <span class='inline-code'>true</span>.
</checklist>



<dots></dots>
<warning>
    <p>Vous devez commenter chaque √©tape. </p>
    Par exemple pour l'instruction 1 de la partie "classe JS"
    <highlight lang='javascript'>/* Classe JS - 1 */</highlight>
</warning>

<grostitre>Requis Classe JavaScript</grostitre>
<h3>Personnages de films</h3>
<checklist>
D√©finissez une classe <span class='inline-code'>Character</span> avec les propri√©t√©s‚ÄØ: <br>&nbsp;-<span class='inline-code'>name</span> : nom du personnage, <br>&nbsp;-<span class='inline-code'>type</span> : h√©ros ou vilain <br>&nbsp;-<span class='inline-code'>actor</span> : nom de l'acteur/actrice qui incarne le r√¥le <br>&nbsp;-<span class='inline-code'>movieTitle</span> : titre du film
Cr√©ez une m√©thode <span class='inline-code'>introduce()</span>. 
Cette m√©thode <span class='inline-code'>introduce()</span> doit √™tre appel√©e √† partir de l'int√©rieur de la classe, automatiquement, d√®s son instanciation.
Dans cette m√©thode, si la balise <span class='inline-code'>div.characters</span> est vide, cr√©er une balise titre de niveau 2 qui contient le mot <em>Personnages</em> et ajoutez cet √©l√©ment √† l'int√©rieur du <span class='inline-code'>div.characters</span>.
Toujours dans cette m√©thode, ajoutez une balise paragraphe √† la fin du <span class='inline-code'>div.characters</span>. 
Cette balise paragraphe contiendra une phrase telle que: <em>"Leonardo Dicaprio incarne le r√¥le de Dominic Cobb (h√©ros) dans le film Inception"</em>.
Dynamisez les valeurs de cette phrase avec les valeurs des propri√©t√©s de la classe.
Cr√©ez 3 instances de la classe <span class='inline-code'>Character</span>, chacune devra passer en param√®tre des informations de cinq personnages diff√©rents, ceux que vous pr√©f√©rez. Il n'est pas n√©cessaire que ces personnages soient ceux des films list√© ci-haut.
</checklist>



<dots></dots>
<grostitre>Remise</grostitre>
<checklist>Assurez-vous de nommer le dossier de l'examen compl√©t√© de cette fa√ßon (en changeant nom et pr√©nom pour le votre) et de le compresser en format .zip : <em>nom-prenom_exa316.zip</em>
Remettez le dans Teams > Devoirs > Examen final.
</checklist>
<alert>IMPORTANT: Avant de quitter la classe, venez me voir afin que je valide que j'ai bien re√ßu votre envoi.</alert>





