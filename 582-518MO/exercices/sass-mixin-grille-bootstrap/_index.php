<?php
/**
 * @type     exercice
 * @title    @mixin - Grille Bootstrap
 * @icon     images/thumb-mixin.jpg
 * @abstract Comment Bootstrap utilise les mixin de CSS pour g√©n√©rer leur syst√®me de grille
 */
?>

<p>Dans le cadre de cet exercice, nous allons lever le voile sur l‚Äôusage que fait <a href="https://getbootstrap.com/">Bootstrap</a> de SCSS afin de g√©n√©rer sa fameuse grille ayant fait sa renomm√©e&nbsp;mondiale.</p>

<p>Aper√ßu du r√©sultat‚ÄØüëá</p>

<clipasset src="images/scss-grille-bootstrap.mp4"></clipasset>

<grostitre>Mat√©riel</grostitre>
 
<doclink href="https://codepen.io/smnarnold/pen/rNwxGqQ">Pen de d√©part</doclink>



<h3 class="heading heading--h3" id="Couleurs‚ÄØüé®">Couleurs‚ÄØüé®</h3>
<table class="table-couleurs">
    <tr>
        <td>Rose alpha</td>
        <td>
            <color>rgba(235,225,223,0.65)</color>
        </td>
    </tr>
    <tr>
        <td>Noir</td>
        <td>
            <color>#000000</color>
        </td>
    </tr>
</table>

<grostitre>Requis</grostitre>
<checklist>En CSS, faites en sorte que l'√©l√©ment <incode>.container</incode> prennent toute la largeur jusqu'√† un maximum de 540px et ajuster sa marge afin que celui-ci soit toujours centr√© horizontalement dans la page. Afin de mieux le voir, ajoutez-lui un fond rose alpha, une taille de texte de 20px et une bordure noire de 2px.
Toujours en CSS, cr√©ez 3 m√©dia queries faisant en sorte qu'√† partir de 768px l'√©l√©ment <incode>.container</incode> aille une largeur maximale de 720px, √† partir de 992px = 960px et finalement 1200px = 1140px.
Utilisez le nesting SCSS afin d'ajouter les styles suivants aux √©l√©ments avec la classe <incode>.row</incode> enfants de <incode>.container</incode>. Ces √©l√©ments doivent √™tre en flex et permettre aux √©l√©ments √† l'int√©rieur de lui de s'afficher sur plusieurs lignes.
Cr√©ez-vous une mixin SCSS dont l'utilit√©e sera de g√©rer les colonnes de notre grille. Par d√©faut, cette mixin devrait attribuer une largeur de 100% √† son √©l√©ment ainsi qu'une bordure noire de 2px. Afin de le tester, cr√©ez la classe <incode>.col-12</incode> et appelez votre nouvelle mixin √† l'int√©rieur de celui-ci.<br><br>Vous devriez alors voir la phrase<em> "Petit love √† tous les students qui font pas d'erreurs"</em> s'afficher dans un encadr√©.
Rendons la mixin plus polyvalente! Pour ce faire, elle doit accepter un argument (param√®tre) correspondant au nombre de colonnes d√©sir√©es comme largeur. <br><br>Par exemple, l'√©l√©ment <incode>.col-12</incode> devrait passer le chiffre 12 en argument. 
Donnez une valeur de 1 par d√©faut √† l'argument  au cas ou la mixin serait appel√©e sans qu'il soit sp√©cifi√©.
Plut√¥t que de donner une largeur de 100%, prenez le nombre de colonnes pass√© en argument et divisez le par 12 <em>(nombre total de colonnes dans une grille Bootstrap)</em>. Multipliez le ensuite par 100%. 
Votre colonne encadr√©e devrait maintenant avoir une largeur de 1 douzi√®me, car aucun argument ne lui est actuellement pass√©. Corriger le tout en lui passant le nombre 12.
Cr√©ez une boucle allant de 1 √† 12. Faites en sorte de cr√©er les classes <incode>.col-1</incode>, <incode>.col-2</incode>, <incode>.col-3</incode> ‚Ä¶ jusqu'√† <incode>.col-12</incode> et appelez votre mixin g√©rant les colonnes de votre grille avec le nombre correspondant √† l'index de la boucle comme param√®tre.<br><br>Vos colonnes devraient maintenant ressembler √† celles de Bootstrap. Vous pouvez en profiter pour effacer votre code <incode>.col-12</incode> se trouvant √† l'ext√©rieur de votre boucle.
Cr√©ez une variable qui correspondra √† l'espace d√©sir√© entre chaque colonne et donnez-lui une valeur de 30px. Dans votre mixin, faites en sorte qu'une marge int√©rieure horizontale correspondant √† la moiti√© de votre variable soit ajout√©e. Ainsi lorsque deux colonnes seront affich√©es une √† c√¥t√© de l'autre l'addition de leurs deux moiti√©s correspondra √† l'espacement total d√©sir√©.
Le dernier point permet au contenu des colonnes de mieux respirer. Cependant, cette marge int√©rieure fait en sorte que le contenu a √©t√© d√©cal√© √† l'int√©rieur du <incode>.container</incode>. Ce subtil, mais important point, cause des enjeux de mise en page. Afin de contourner ce probl√®me, Bootstrap est arriv√© avec une solution astucieuse: mettre une marge horizontale n√©gative √† ses <incode>.row</incode>. Ajoutez donc une marge n√©gative correspondant √† une demi-largeur de votre variable √† vos <incode>.row</incode> et remarquez comment votre contenu texte redevient align√© avec votre <incode>.container</incode>.
Retirez la bordure noire de votre <incode>.container</incode> et voil√† ‚ú® Vous avez recr√©√© le coeur de la grille de Bootstrap!</checklist>   


      


<grostitre>Notes de cours‚ÄØüìö</grostitre>

<intlink href="../../sass/imbrication/"></intlink>
<intlink href="../../sass/variables/"></intlink>
<intlink href="../../sass/mixins/"></intlink>
<doclink href="https://smnarnold.com/cours/css/flexbox-avance">Flexbox avanc√©</doclink>
