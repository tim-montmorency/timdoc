<?php
/**
 * @type     article
 * @title    Pseudo-classes avanc√©es
 * @icon     images/icon.png
 * @abstract :first-of-type, :only-of-type, :empty, :not, :has
 */
?>

<grostitre>:first-of-type & :last-of-type</grostitre>

<p>Comme leurs noms l'indiquent, <incode>:first-of-type</incode> et <incode>:last-of-type</incode> permettent de s√©lectionner le premier et dernier √©l√©ment dans un groupe correspondant au s√©lecteur pass√© avant le <incode>:</incode>.</p>

<p>Contrairement √† <a href="../pseudo-classes-intermediaires/#first-child-last-child">first-child et last-child</a> qui ne s√©lectionnent uniquement un √©l√©ment que s'il correspond au s√©lecteur ET qu'il est au premier ou dernier index de son groupe, <incode>:first-of-type</incode> et <incode>:last-of-type</incode> s√©lectionnent le premier √©l√©ment correspondant au s√©lecteur √† partir du d√©but et √† partir de la fin, m√™me s'il n'est pas exactement au premier ou dernier index.</p>

<p>Par exemple, la r√®gle suivante:</p>

<highlight lang="css">span:first-of-type { ... }</highlight>

<p>Recherche dans un groupe le premier √©l√©ment de type <incode>span</incode>. Si un √©l√©ment est trouv√©, il est s√©lectionn√©.</p>

<p>Dans les exemples ci-dessous, tous les carr√©s ont la classe <incode>.element</incode>. Cependant, seuls les carr√©s 3, 4 et 5 sont des <incode>&lt;span&gt;</incode>, les autres √©tant des <incode>&lt;div&gt;</incode>. Donc √† gauche <incode>span:first-of-type</incode> s√©lectionne le carr√© #3 et le rend bleu‚Äâüü¶, tandis qu'√† droite <incode>span:last-of-type</incode> s√©lectionne le carr√© #5.</p>

<codepen id="JjBByZj" tab="result" height="340"></codepen>

<doclink href="https://developer.mozilla.org/fr/docs/Web/CSS/:first-of-type">:first-of-type</doclink>
<doclink href="https://www.w3schools.com/cssref/sel_first-of-type.asp">:first-of-type</doclink>

<br>

<doclink href="https://developer.mozilla.org/fr/docs/Web/CSS/:last-of-type">:last-of-type</doclink>
<doclink href="https://www.w3schools.com/cssref/sel_last-of-type.asp">:last-of-type</doclink>

<dots></dots>


<grostitre>:only-of-type</grostitre>

<p>S√©lectionne un √©l√©ment lorsqu'il est le seul de son type dans un groupe. Bref, lorsque l'√©l√©ment est √† la fois le <incode>:first-of-type</incode> et le <incode>:last-of-type</incode> de son groupe.</p>

<p>Par exemple, la r√®gle suivante:</p>

<highlight lang="css">span.element:only-of-type { ... }</highlight>

<p>Valide √† l'int√©rieur de chaque groupe d'√©l√©ments si un seul enfant √† la classe <incode>.element</incode> et est de type <incode>span</incode>. Si tel est le cas, l'√©l√©ment est s√©lectionn√©.</p>

<p>Dans l'exemple ci-dessous, tous les carr√©s ont la classe <incode>.element</incode>. Cependant, √† gauche, plusieurs enfants <em>(3, 4 et 5)</em> sont des <incode>&lt;span&gt;</incode>, donc aucun d'entre eux n'est s√©lectionn√©. Tandis qu'√† droite, un seul enfant <em>(4)</em> est un <incode>&lt;span&gt;</incode>, donc <incode>:only-of-type</incode> le s√©lectionne et le rend bleu.</p>

<codepen id="vYaaJvy" tab="result" height="340"></codepen>

<doclink href="https://developer.mozilla.org/fr/docs/Web/CSS/:only-of-type">:only-of-type</doclink>
<doclink href="https://www.w3schools.com/cssref/sel_only-of-type.asp">:only-of-type</doclink>

<dots></dots>


<grostitre>:nth-of-type() & :nth-last-of-type()</grostitre>

<p>Ces pseudo-classe fonctionnent sur le m√™me principe que <a href="../pseudo-classes-intermediaires/#nth-child">nth-child et nth-last-child</a> √† la diff√©rence que les s√©lections sont bas√©es sur l'index des √©l√©ments correspondant au s√©lecteur et non √† l'index r√©el de l'√©l√©ment dans son groupe.</p>

<p>Par exemple, la r√®gle suivante:</p>

<highlight lang="css">span.element:nth-of-type(2) { ... }</highlight>

<p>S√©lectionne le carr√© #4 puisqu''il est le 2e √©l√©ment de type <incode>span</incode> √† avoir la classe <incode>.element</incode>.</p>

<codepen id="BaPPdbJ" tab="result" height="340"></codepen>

<p>Les mots-cl√©s <incode>even</incode> et <incode>odd</incode>, les occurrences <incode>n</incode> et les d√©calages <incode>-/+</incode> sont tous aussi disponibles avec ces pseudo-classes.</p>

<doclink href="https://developer.mozilla.org/fr/docs/Web/CSS/:nth-of-type">:nth-of-type()</doclink>
<doclink href="https://www.w3schools.com/cssref/sel_nth-of-type.asp">:nth-of-type()</doclink>

<br>

<doclink href="https://developer.mozilla.org/fr/docs/Web/CSS/:nth-last-of-type">:nth-last-of-type()</doclink>
<doclink href="https://www.w3schools.com/cssref/sel_nth-last-of-type.asp">:nth-last-of-type()</doclink>

<dots></dots>


<grostitre>:empty</grostitre>

<p>Comme son nom l'indique, <incode>:empty</incode> permet de s√©lectionner les √©l√©ments vides s'ils correspondent au s√©lecteur pass√© avant le <incode>:</incode>.</p>

<p>Par exemple, la r√®gle suivante:</p>

<highlight lang="css">.element:empty { ... }</highlight>

<p>Valide si un ou plusieurs √©l√©ments avec la classe <incode>.element</incode> sont vides.</p>

<warning>D√®s qu‚Äôun enfant est pr√©sent √† l‚Äôint√©rieur de la balise, l‚Äô√©l√©ment n‚Äôest plus vide. <strong>Un simple espace compte comme un enfant</strong>, m√™me si rien n‚Äôest visible √† l‚Äô√©cran.</warning>

<p>Dans l'exemple ci-dessous, les carr√©s #2 et #5 n'ont plus de contenu. Cependant, le carr√© #2 contient toujours un espace. Il n'est donc pas s√©lectionn√© puisqu'il n'est pas √† proprement parler vide. Le carr√© #5 ne contient absolument rien, ce dernier est donc s√©lectionn√©.</p>

<codepen id="PoBBKMO" tab="css,result" height="340"></codepen>

<doclink href="https://developer.mozilla.org/fr/docs/Web/CSS/:empty">:empty</doclink>
<doclink href="https://www.w3schools.com/cssref/sel_empty.asp">:empty</doclink>

<dots></dots>


<grostitre>:not</grostitre>

<p>La pseudo-classe <incode>:not()</incode> permet de s√©lectionner tous les √©l√©ments ne correspondant pas au s√©lecteur pass√© entre parenth√®ses.</p>

<p>Par exemple, la r√®gle suivante:</p>

<highlight lang="css">:not(span)</highlight>

<p>S√©lectionne tous les √©l√©ments qui ne sont pas des <incode>&lt;span&gt;</incode>.</p>

<p>Il est aussi possible de raffiner un s√©lecteur de base en lui ajoutant la pseudo-classe <incode>:not()</incode> pour ainsi ne garder que les √©l√©ments qui correspondent au premier s√©lecteur et non au deuxi√®me.</p>

<p>Par exemple, la r√®gle suivante:</p>

<highlight lang="css">.element:not(span) { ... }</highlight>

<p>S√©lectionne tous les √©l√©ments <incode>.element</incode> √† l'exception des carr√©s 3, 4 et 5, puisqu'ils sont de type <incode>span</incode>.</p>

<codepen id="JjBBroG" tab="css,result" height="340"></codepen>

<doclink href="https://developer.mozilla.org/fr/docs/Web/CSS/:not">:not</doclink>
<doclink href="https://www.w3schools.com/cssref/sel_not.asp">:not</doclink>

<dots></dots>


<grostitre>:has</grostitre>

<p>La pseudo-classe <span class="inline-code">:has()</span> permet de cibler un √©l√©ment si au moins un des s√©lecteurs pass√©s en param√®tre correspond √† l'√©l√©ment.</p>

<p>√âtant donn√© qu'il n'existe pas de s√©lecteur de voisin pr√©c√©dent, <span class="inline-code">:has()</span> peut devenir assez pratique dans certaines situations.</p>

<p>Dans l'exemple suivant, un parent sera s√©lectionn√© si son ou un de ses enfants est survol√©.</p>

<highlight lang="css">.parent:has(.child:hover)</highlight>

<p>Ainsi, on peut changer les propri√©t√©s d'√©l√©ments voisins en passant par le parent et la pseudo-classe <span class="inline-code">:has()</span>.</p>

<codepen id="poOXXeL" tab="css,result" height="340"></codepen>

<warning>Au moment d'√©crire ces lignes, le navigateur <a target="_blank" href="https://caniuse.com/?search=%3Ahas()">Firefox ne supporte toujours pas</a> la pseudo-classe <span class="inline-code">:has</span> par d√©faut.</warning>

<doclink href="https://developer.mozilla.org/fr/docs/Web/CSS/:has">:has</doclink>
<doclink href="https://css-tricks.com/the-css-has-selector/">:has</doclink>

<dots></dots>


<exercice href="exercices/css-diner/"></exercice>

<dots></dots>


<grostitre>R√©sum√© vid√©o</grostitre>

<clip src="videos/css-pseudo-classes-in-100-seconds.mp4"></clip>

<dots></dots>




